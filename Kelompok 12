#include <stdio.h>

// Fungsi untuk mengecek apakah suatu bilangan adalah bilangan prima atau bukan
int isPrime(int num) {
    if (num < 2) {
        return 0; // Bukan bilangan prima jika kurang dari 2
    }

    for (int i = 2; i <= num / 2; i++) {
        if (num % i == 0) {
            return 0; // Bukan bilangan prima jika dapat dibagi oleh i
        }
    }

    return 1; // Bilangan prima
}

// Fungsi untuk mengecek bilangan prima pada bilangan 4-bit
int check4BitPrime(int A, int B, int C, int D) {
    int num = A * 8 + B * 4 + C * 2 + D; // Konversi biner 4-bit ke desimal
    return isPrime(num);
}

int main() {
    int A, B, C, D;

    // Input dari pengguna dengan penanganan kesalahan
    printf("Masukkan nilai A (0 atau 1): ");
    if (scanf("%d", &A) != 1 || (A != 0 && A != 1)) {
        printf("Data tidak valid. Harap masukkan angka 0 atau 1.\n");
        return 1; // Menghentikan program dengan kode kesalahan
    }

    printf("Masukkan nilai B (0 atau 1): ");
    if (scanf("%d", &B) != 1 || (B != 0 && B != 1)) {
        printf("Data tidak valid. Harap masukkan angka 0 atau 1.\n");
        return 1;
    }

    printf("Masukkan nilai C (0 atau 1): ");
    if (scanf("%d", &C) != 1 || (C != 0 && C != 1)) {
        printf("Data tidak valid. Harap masukkan angka 0 atau 1.\n");
        return 1;
    }

    printf("Masukkan nilai D (0 atau 1): ");
    if (scanf("%d", &D) != 1 || (D != 0 && D != 1)) {
        printf("Data tidak valid. Harap masukkan angka 0 atau 1.\n");
        return 1;
    }

    // Memanggil fungsi untuk mengecek bilangan prima pada bilangan 4-bit
    int result = check4BitPrime(A, B, C, D);

    // Output hasil pengecekan
    printf("Bilangan %d%d%d%d %s bilangan prima.\n", A, B, C, D, result ? "adalah" : "bukan");

    return 0;
}
